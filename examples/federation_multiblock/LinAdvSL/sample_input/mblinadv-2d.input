// 
// 文件名:	mblinadv-2d.input
// 软件包:	JASMIN application
// 版权  :	(c) 2004-2010 北京应用物理与计算数学研究所
// 版本号:	$Revision: 1.4 $
// 修改  :	$Date: 2007/01/12 06:52:41 $
// 描述  :	输入文件:JASMIN-MBLinAdv实例
//

Main{
    // 日志文件名称.
   log_file_name = "LinAdvSL-mblinadv_2d.log"
   log_all_nodes    = FALSE

   // 可视化数据场的输出参数.
   javis_dump_interval         = 10                   // 输出时间步的间隔. 0表示关闭.
   javis_dump_dirname          = "javis_mblinadv2d"   // 存储数据场的目录名.
   javis_number_procs_per_file = 1                    // 多少个进程共享一个输出文件.

   // 重启动控制参数.
   restart_dump_interval       = 1000                  // 重启动时间步的间隔. 0表示关闭.
   restart_dump_dirname        = "restart_mblinadv2d" // 存储重启动数据场的目录名.
}

FederationCartesianGeometry{
   BLOCKS_LIST {             // 块序列.
      number_of_blocks = 4   // 块总数.
      block_0 {              // 第0块.
         domain_boxes = [(0,0),(99,29)]   // 索引范围.
         x_lo         = 0.0,0.0           // 第0块计算区域左下角的坐标值.
         x_up         = 5.0,1.5           // 第0块计算区域右上角的坐标值.
      }
      block_1 {              // 第1块.
         domain_boxes = [(10,0),(109,19)]   // 索引范围.
         x_lo         = 5.0 ,0.0          // 第1块计算区域左下角的坐标值.
         x_up         = 10.0,1.0          // 第1块计算区域右上角的坐标值.
      }
      block_2 {              // 第2块.
         domain_boxes = [(10,10),(109,19)]   // 索引范围.
         x_lo         = 0.0,1.5          // 第2块计算区域左下角的坐标值.
         x_up         = 5.0,2.0          // 第2块计算区域右上角的坐标值.
      }
      block_3 {              // 第3块.
         domain_boxes = [(10,0),(109,19)]   // 索引范围.
         x_lo         = 5.0 ,1.0          // 第3块计算区域左下角的坐标值.
         x_up         = 10.0,2.0          // 第3块计算区域右上角的坐标值.
      }
   }
   CONFORMING_NEIGHBORS_LIST {
      number_of_neighbors = 5    // 邻居数.
      neighbors_0 {
         block_a      = 0
         block_b      = 1
         point_in_a_space = 100,0
         point_in_b_space =  10,0
      }
      neighbors_1 {
         block_a      = 0
         block_b      = 2
         point_in_a_space =  0,30
         point_in_b_space = 10,10
      }
      neighbors_2 {
         block_a      = 0
         block_b      = 3
         point_in_a_space =100,20
         point_in_b_space = 10, 0
      }
      neighbors_3 {
         block_a      = 1
         block_b      = 3
         point_in_a_space = 10,20
         point_in_b_space = 10, 0
      }
      neighbors_4 {
         block_a      = 2
         block_b      = 3
         point_in_a_space =110,19
         point_in_b_space = 10,19
      }
   }
   FEDERALS_LIST {
      number_of_federals = 3
      federal_0 {
         name   = "MBLinAdv_LEFT"
         blocks = 0 
      }
      federal_1 {
         name   = "MBLinAdv_MIDDLE"
         blocks = 1,2 
      }
      federal_2 {
         name   = "MBLinAdv_RIGHT"
         blocks = 3 
      }
   }
}

MBLinAdv {
   constant_x_velocity = 0.1            // X方向的对流速度.
}

HierarchyTimeIntegrator{

   // 时间控制参数
   start_time           = 0.e0          // 模拟的初始时刻.
   end_time             = 70.0          // 模拟的终止时刻.
   max_integrator_steps = 2000          // 模拟的最大时间步数.
   max_dt               = 1.0           // 最大时间步步长.
   grow_dt              = 1.2           // 连续两个时间步长的最大放大倍数.

   // 网格重构控制参数
   regrid_interval     = 2              // 网格重构间隔
   GriddingAlgorithm{

      // 最大网格层数.
      max_levels = 1         // 网格片层次结构中的最大网格层数.

      // 最大网格片大小.
      largest_patch_size {
         level_0 = 32 , 32
      }

      // 最小网格片大小.
      smallest_patch_size {
         level_0 = 8 ,8 
      }

      federal_1 {
         largest_patch_size {
            level_0 = 16, 16
         }
      }
      federal_2 {
         largest_patch_size {
            level_0 = 24, 16
         }
      }

   }

   use_nonuniform_workload  = TRUE  // 是否采用非均匀负载模型
   load_balancing_threshold = 0.95  // 负载平衡阈值
   print_balance_efficiency = TRUE  // 是否输出负载平衡相关的统计数据

}

TimerManager{
   timer_list       = "apps::main::*","algs::*::*"
   print_summed     = TRUE
   print_max        = TRUE
}

