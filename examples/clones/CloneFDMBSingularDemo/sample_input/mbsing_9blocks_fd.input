// 
// 文件名:    mbsing_8blocks_fd.input
// 软件包:    JASMIN application
// 版权  :	(c) 2004-2010 北京应用物理与计算数学研究所
// 版本号:    $Revision: 1.4 $
// 修改  :    $Date: 2007/01/12 06:52:41 $
// 描述  :    输入文件:JASMIN-FDMBSingDemo实例.
//

FDMBSingDemo {
}
     

DeformingGridInputUtilities2{

    POINTS {
       number_of_points = 17
       coordinates_0    = 0.0 ,-0.5, 0.0 , 0.5,-0.7, 0.0, 0.6   ,-1.0, 0.75,
                         -0.083,0.083, 0.0,-0.208,0.0,0.208, 1.2, 1.2
       coordinates_1    = 0.0, 0.0 , 0.5,  0.0, 0.0, 0.7, 0.1414, 0.0, 0.3285,
                          0.811,0.811,0.85, 0.978,1.0,0.978, 0.0, 0.3285
       boundary_points     = 0, 7, 3, 15, 16
       boundary_conditions = 1, 2, 2, 2 , 3   // 1: 园心对称; 2: R-对称; 3:自由
    }
    SEGMENTS {
       number_of_segments = 26
       segment_0 {
          type_of_geometry   = "POINT"
          number_of_cells    = 40
          start_point_number = 0
          boundary_condition = 1        // 1: 园心对称.
       }
       segment_1 {
          type_of_geometry   = "LINE"
          number_of_cells    = 20
          start_point_number = 0
          end_point_number   = 1
          partitioning_method= "PROP"
          prop_ratio         = -1.05
          boundary_condition = 2        // 2: R-对称.
       }
       segment_2 {
          type_of_geometry   = "LINE"
          number_of_cells    = 20
          start_point_number = 0
          end_point_number   = 3
          partitioning_method= "PROP"
          prop_ratio         = -1.05
          boundary_condition = 2        // 2: R-对称.
       }
       segment_3 {
          type_of_geometry   = "CARC"
          number_of_cells    = 20
          start_point_number = 1
          end_point_number   = 2
          center_on_left     = FALSE
          radius             = 0.5
          partitioning_method= "EVEN"
       }
       segment_4 {
          type_of_geometry   = "CARC"
          number_of_cells    = 20
          start_point_number = 2
          end_point_number   = 3
          center_on_left     = FALSE
          radius             = 0.5
          partitioning_method= "EVEN"
       }
       segment_5 {
          type_of_geometry   = "LINE"
          number_of_cells    = 15
          start_point_number = 1
          end_point_number   = 4
          partitioning_method= "EVEN"
          boundary_condition = 2        // 2: R-对称.
       }
       segment_6 {
          type_of_geometry   = "LINE"
          number_of_cells    = 15
          start_point_number = 2
          end_point_number   = 5
          partitioning_method= "EVEN"
       }
       segment_7 {
          type_of_geometry   = "LINE"
          number_of_cells    = 15
          start_point_number = 3
          end_point_number   = 6
          partitioning_method= "EVEN"
       }
       segment_8 {
          type_of_geometry   = "CARC"
          number_of_cells    = 20
          start_point_number = 4
          end_point_number   = 5
          center_on_left     = FALSE
          radius             = 0.70
          partitioning_method= "EVEN"
       }
       segment_9 {
          type_of_geometry   = "CARC"
          number_of_cells    = 20
          start_point_number = 5
          end_point_number   = 6
          center_on_left     = FALSE
          radius             = 0.70
          partitioning_method= "EVEN"
       }
       segment_10 {
          type_of_geometry   = "LINE"
          number_of_cells    = 15 
          start_point_number = 4
          end_point_number   = 7
          partitioning_method= "EVEN"
          boundary_condition = 2        // 2: R-对称.
       }
       segment_11 {
          type_of_geometry   = "LINE"
          number_of_cells    = 15
          start_point_number = 6 
          end_point_number   = 8 
          partitioning_method= "EVEN"
       }
       segment_12 {
          type_of_geometry   = "CARC"
          number_of_cells    = 20
          start_point_number = 7 
          end_point_number   = 12 
          center_on_left     = FALSE
          radius             = 1.0 
          partitioning_method= "EVEN"
          boundary_condition = 3        // 3: 流体自由, 温度Dirichlet.
       }
       segment_13 {
          type_of_geometry   = "CARC"
          number_of_cells    = 6 
          start_point_number = 12 
          end_point_number   = 13 
          center_on_left     = FALSE
          radius             = 1.0 
          partitioning_method= "EVEN"
          boundary_condition = 3        // 3: 流体自由, 温度Dirichlet.
       }
       segment_14 {
          type_of_geometry   = "CARC"
          number_of_cells    = 6 
          start_point_number = 13 
          end_point_number   = 14 
          center_on_left     = FALSE
          radius             = 1.0 
          partitioning_method= "PROP"
          prop_ratio         = -1.1
          boundary_condition = 3        // 3: 流体自由, 温度Dirichlet.
       }
       segment_15 {
          type_of_geometry   = "CARC"
          number_of_cells    = 20 
          start_point_number = 14 
          end_point_number   = 8 
          center_on_left     = FALSE
          radius             = 1.0 
          partitioning_method= "EVEN"
          boundary_condition = 3        // 3: 流体自由, 温度Dirichlet.
       }
       segment_16 {
          type_of_geometry   = "LINE"
          number_of_cells    = 6  
          start_point_number = 5 
          end_point_number   = 9  
          partitioning_method= "EVEN"
       }
       segment_17 {
          type_of_geometry   = "LINE"
          number_of_cells    = 9  
          start_point_number = 9 
          end_point_number   = 12 
          partitioning_method= "EVEN"
       }
       segment_18 {
          type_of_geometry   = "LINE"
          number_of_cells    = 6  
          start_point_number = 5 
          end_point_number   = 10 
          partitioning_method= "EVEN"
       }
       segment_19 {
          type_of_geometry   = "LINE"
          number_of_cells    = 9  
          start_point_number = 10 
          end_point_number   = 14 
          partitioning_method= "EVEN"
       }
       segment_20 {
          type_of_geometry   = "LINE"
          number_of_cells    = 6  
          start_point_number = 9
          end_point_number   = 11 
          partitioning_method= "EVEN"
       }
       segment_21 {
          type_of_geometry   = "LINE"
          number_of_cells    = 6  
          start_point_number = 10
          end_point_number   = 11 
          partitioning_method= "EVEN"
       }
       segment_22 {
          type_of_geometry   = "LINE"
          number_of_cells    = 9  
          start_point_number = 11
          end_point_number   = 13 
          partitioning_method= "EVEN"
       }
       segment_23 {
          type_of_geometry   = "LINE"
          number_of_cells    = 40  
          start_point_number = 3
          end_point_number   = 15 
          partitioning_method= "EVEN"
          boundary_condition = 2        // 2: 对称
       }
       segment_24 {
          type_of_geometry   = "LINE"
          number_of_cells    = 30  
          start_point_number = 15
          end_point_number   = 16 
          partitioning_method= "EVEN"
          boundary_condition = 3        // 3: 自由
       }
       segment_25 {
          type_of_geometry   = "LINE"
          number_of_cells    = 40  
          start_point_number = 8
          end_point_number   = 16 
          partitioning_method= "EVEN"
          boundary_condition = 3        // 3: 自由
       }
    }
    DOMAINS {
       number_of_domains = 9
       domain_0 {
          mesh_generation_method = "YEVEN"
          box   = [(0,0),(39,19)]  
          left_edge  = 1
          right_edge = 2
          lower_edge = 0
          upper_edge = 3,4
       }
       domain_1 {
          mesh_generation_method = "YEVEN"
          box   = [(0,0),(19,14)] 
          left_edge  = 5
          right_edge = 6
          lower_edge = 3
          upper_edge = 8
       }
       domain_2 {
          mesh_generation_method = "YEVEN"
          box   = [(0,0),(19,14)]
          left_edge  = 6
          right_edge = 7
          lower_edge = 4
          upper_edge = 9
       }
       domain_3 {
          mesh_generation_method = "YEVEN"
          box   = [(0,0),(19,14)] 
          left_edge  = 10
          right_edge = 16,17
          lower_edge = 8
          upper_edge = 12
       }
       domain_4 {
          mesh_generation_method = "YEVEN"
          box   = [(0,0),(19,14)]
          left_edge  = 18,19
          right_edge = 11
          lower_edge = 9
          upper_edge = 15
       }
       domain_5 {
          mesh_generation_method = "YEVEN"
          box   = [(0,0),(5,5)] 
          left_edge  = 16
          right_edge = 21
          lower_edge = 18
          upper_edge = 20
       }
       domain_6 {
          mesh_generation_method = "YEVEN"
          box   = [(0,0),(5,8)] 
          left_edge  = 17
          right_edge = 22
          lower_edge = 20
          upper_edge = 13
       }
       domain_7 {
          mesh_generation_method = "XEVEN"
          box   = [(0,0),(8,5)] 
          left_edge  = 21
          right_edge = 14
          right_directions = FALSE
          lower_edge = 19
          upper_edge = 22
       }
       domain_8 {
          mesh_generation_method = "XEVEN"
          box   = [(0,0),(39,29)] 
          left_edge  = 7, 11
          right_edge = 24
          lower_edge = 23
          upper_edge = 25
       }
    }
    BLOCKS {
       number_of_blocks = 9
       block_0 {
          domains = 0
          input_patch_boxes = [(0,0),(39,3)]
       }
       block_1 {
          domains = 1
       }
       block_2 {
          domains = 2
       }
       block_3 {
          domains = 3
       }
       block_4 {
          domains = 4
       }
       block_5 {
          domains = 5
       }
       block_6 {
          domains = 6
       }
       block_7 {
          domains = 7
       }
       block_8 {
          domains = 8
       }
    }
    FEDERALS {
       number_of_federals = 3
       federal_0 {
          name   = "FDMBSingDemo_LEFT"
          blocks = 0,1,2
          clones = 3
       }
       federal_1 {
          name   = "FDMBSingDemo_MIDDLE"
          blocks = 3,4,5,6,7 
          clones = 2
       }
       federal_2 {
          name   = "FDMBSingDemo_RIGHT"
          blocks = 8
          clones = 4
       }
    }

}

TimerManager{
   timer_list       = "apps::main::*","algs::*::*"
   print_summed     = TRUE
   print_max        = TRUE
}

Main {

    // 日志文件名称.
   log_file_name = "CloneFDMBSingularDemo-mbsing_9blocks_fd.log"
   log_all_nodes    = FALSE

   // 可视化数据场的输出参数.
   javis_dump_interval     =  1                // 输出的间隔. 0表示关闭.
   javis_dump_dirname     = "viz_MBSingDemo2d"  // 存储数据场的目录名.
   javis_number_procs_per_file = 1           // 多少个进程共享一个输出文件.

   // 重启动控制参数.
   restart_dump_interval  = 1       // 重启动时间步的间隔. 0表示关闭.
   restart_dump_dirname  = "restart_MBSingDemo2d" 
                                    // 存储重启动数据场的目录名.
}

HierarchyTimeIntegrator{

   start_time           = 0.e0    // 模拟的初始时刻.
   end_time             = 100.0   // 模拟的终止时刻.
   max_integrator_steps = 10       // 模拟的最大时间步数.
   max_dt              = 10.0     // 最大时间步步长.

   regrid_interval     = 2
   GriddingAlgorithm{

      // 仅包含单层网格.
      max_levels = 1

      // 最大网格片大小.
      largest_patch_size {
         level_0 = 64,64 
      }

      // 最小网格片大小.
      smallest_patch_size {
         level_0 = 4 , 4
      }

      federal_1 {
         largest_patch_size {
            level_0 = 6,6 
         }
      }

      federal_2 {
         largest_patch_size {
            level_0 = 4, 4
         }
      }

   }

   use_nonuniform_workload  = FALSE     // 是否采用非均匀负载模型
   load_balancing_threshold = 0.95      // 负载平衡阈值
   print_balance_efficiency = FALSE     // 是否输出负载平衡相关的统计数据

}

