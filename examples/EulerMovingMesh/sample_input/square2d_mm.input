// 
// 文件名:    square2d-mm.input
// 软件包:    JASMIN application
// 版权  :	(c) 2004-2010 北京应用物理与计算数学研究所
// 版本号:    $Revision: 1.4 $
// 修改  :    $Date: 2007/01/12 06:52:41 $
// 描述  :    输入文件:JASMIN-EulerMM实例.
//

EulerMM {

     // 理想气体比热比.
     gamma = 1.4
     
     // 几何区域的左下角坐标值和右上角坐标值.
     xlo = 0.0, 0.0
     xhi = 1.0, 1.0

}

DeformingGridInputUtilities2 {

        POINTS {
           number_of_points = 9 
           coordinates_0    = 0.0, 0.5, 1.0, 0.0, 0.5, 1.0, 0.0, 0.5, 1.0
           coordinates_1    = 0.0, 0.0, 0.0, 0.5, 0.5, 0.5, 1.0, 1.0, 1.0
           boundary_points     = 0, 2, 6, 8
           boundary_conditions = 0, 0, 0, 0 
        }
        SEGMENTS {
           number_of_segments = 12
           segment_0 {
              type_of_geometry   = "LINE"
              number_of_cells    = 50
              start_point_number = 0
              end_point_number   = 1
              partitioning_method= "EVEN"
              boundary_condition = 1
           }
           segment_1 {
              type_of_geometry   = "LINE"
              number_of_cells    = 50
              start_point_number = 1
              end_point_number   = 2
              partitioning_method= "EVEN"
              boundary_condition = 1
           }
           segment_2 {
              type_of_geometry   = "LINE"
              number_of_cells    = 50
              start_point_number = 0
              end_point_number   = 3
              partitioning_method= "EVEN"
              boundary_condition = 1
           }
           segment_3 {
              type_of_geometry   = "LINE"
              number_of_cells    = 50
              start_point_number = 1
              end_point_number   = 4
              partitioning_method= "EVEN"
           }
           segment_4 {
              type_of_geometry   = "LINE"
              number_of_cells    = 50
              start_point_number = 2
              end_point_number   = 5
              partitioning_method= "EVEN"
              boundary_condition = 1
           }
           segment_5 {
              type_of_geometry   = "LINE"
              number_of_cells    = 50
              start_point_number = 3
              end_point_number   = 4
              partitioning_method= "EVEN"
           }
           segment_6 {
              type_of_geometry   = "LINE"
              number_of_cells    = 50
              start_point_number = 4
              end_point_number   = 5
              partitioning_method= "EVEN"
           }
           segment_7 {
              type_of_geometry   = "LINE"
              number_of_cells    = 50
              start_point_number = 3
              end_point_number   = 6
              partitioning_method= "EVEN"
              boundary_condition = 1
           }
           segment_8 {
              type_of_geometry   = "LINE"
              number_of_cells    = 50
              start_point_number = 4
              end_point_number   = 7
              partitioning_method= "EVEN"
           }
           segment_9 {
              type_of_geometry   = "LINE"
              number_of_cells    = 50
              start_point_number = 5
              end_point_number   = 8
              partitioning_method= "EVEN"
              boundary_condition = 1
           }
           segment_10 {
              type_of_geometry   = "LINE"
              number_of_cells    = 50
              start_point_number = 6
              end_point_number   = 7
              partitioning_method= "EVEN"
              boundary_condition = 1 
           }
           segment_11 {
              type_of_geometry   = "LINE"
              number_of_cells    = 50
              start_point_number = 7 
              end_point_number   = 8 
              partitioning_method= "EVEN"
              boundary_condition = 1 
           }
        }
        DOMAINS {
           number_of_domains = 4
           domain_0 {
              mesh_generation_method = "XEVEN"
              box   = [(0,0),(49,49)] 
              left_edge  = 2
              right_edge = 3
              lower_edge  = 0
              upper_edge = 5
           }
           domain_1 {
              mesh_generation_method = "XEVEN"
              box   = [(50,0),(99,49)]
              left_edge  = 3
              right_edge = 4
              lower_edge  = 1
              upper_edge = 6
           }
           domain_2 {
              mesh_generation_method = "XEVEN"
              box   = [(0,50),(49,99)]
              left_edge  = 7
              right_edge = 8
              lower_edge  = 5
              upper_edge = 10
           }
           domain_3 {
              mesh_generation_method = "YEVEN"
              box   = [(50,50),(99,99)]
              left_edge  = 8
              right_edge = 9
              lower_edge  = 6
              upper_edge = 11 
           }
        }

        input_patch_boxes = [(40,40),(59,59)]
        
}

TimerManager{
   timer_list       = "apps::main::*","algs::*::*"
   print_summed     = TRUE
   print_max        = TRUE
}

Main {

    // 日志文件名称.
   log_file_name = "EulerMovingMesh-square2d_mm.log"
   log_all_nodes    = FALSE

   // 可视化数据场的输出参数.
  viz_dump_interval     =  10               // 输出的间隔. 0表示关闭.
   viz_dump_dirname     = "viz_EulerMM2d"  // 存储数据场的目录名.
   viz_number_procs_per_file = 1           // 多少个进程共享一个输出文件.

   // 重启动控制参数.
   restart_interval       = 1000       // 重启动时间步的间隔. 0表示关闭.
   restart_write_dirname  = "restart_EulerMM2d" // 存储重启动数据场的目录名.

}

EulerLevelIntegratorMM{
   cfl    = 0.48e0    // 最大CFL因子.
}

HierarchyTimeIntegrator{

   start_time           = 0.e0    // 模拟的初始时刻.
   end_time             = 0.25    // 模拟的终止时刻.
   max_integrator_steps = 100     // 模拟的最大时间步数.

   max_dt              = 1.e-1    // 最大时间步步长.
   grow_dt             = 1.2      // 连续两个时间步长的最大放大倍数.

   regrid_interval     = 2           // 负载平衡的间隔.
   use_nonuniform_workload  = TRUE
   load_balancing_threshold = 0.95
   print_balance_efficiency = TRUE

   GriddingAlgorithm{

      // 仅包含单层网格.
      max_levels = 1

      // 最大网格片大小.
      largest_patch_size {
         level_0 = 32,32 
      }

      // 最小网格片大小.
      smallest_patch_size {
         level_0 = 8 , 8
      }

   }

}

