// 
// 文件名:    snsweep-2d.input
// 软件包:    JASMIN application
// 版权  :	(c) 2004-2010 北京应用物理与计算数学研究所
// 版本号:    $Revision: 1.4 $
// 修改  :    $Date: 2007/01/12 06:52:41 $
// 描述  :    输入文件:JASMIN-SnSweep实例.
//

Main {
   // 日志文件名称.
   log_file_name = "MultiblockSnSweep-snsweep_3d.log"
   log_all_nodes    = FALSE

   // 可视化数据场的输出参数.
   javis_dump_interval     = 10        // 输出时间步的间隔. 0表示关闭.
   javis_dump_dirname      = "javis_snsweep3d"  // 存储数据场的目录名.

   // restart dump parameters
   restart_interval=2// zero to turn off
   restart_write_dirname="dual"
}

MultiblockCartesianGeometry{
   BLOCKS_LIST {             // 块序列.
      number_of_blocks = 8   // 块总数.
      block_0 {              // 第0块.
         domain_boxes = [(0,0,0),(19,19,19)]   // 索引范围.
         x_lo         = 0.0,0.0,0.0       // 第0块计算区域左下角的坐标值.
         x_up         = 0.5,0.5,0.5       // 第0块计算区域右上角的坐标值.
      }
      block_1 {              // 第1块.
         domain_boxes = [(20,0,0),(39,19,19)] // 索引范围.
         x_lo         = 0.5,0.0,0.0          // 第1块计算区域左下角的坐标值.
         x_up         = 1.0,0.5,0.5          // 第1块计算区域右上角的坐标值.
      }
      block_2 {              // 第2块.
         domain_boxes = [(0,20,0),(19,39,19)] // 索引范围.
         x_lo         = 0.0,0.5,0.0           // 第2块计算区域左下角的坐标值.
         x_up         = 0.5,1.0,0.5           // 第2块计算区域右上角的坐标值.
      }
      block_3 {              // 第3块.
         domain_boxes = [(20,20,0),(39,39,19)] // 索引范围.
         x_lo         = 0.5,0.5,0.0            // 第3块计算区域左下角的坐标值.
         x_up         = 1.0,1.0,0.5            // 第3块计算区域右上角的坐标值.
      }
      block_4 {              // 第4块.
         domain_boxes = [(0,0,20),(19,19,39)]   // 索引范围.
         x_lo         = 0.0,0.0,0.0       // 第4块计算区域左下角的坐标值.
         x_up         = 0.5,0.5,0.5       // 第4块计算区域右上角的坐标值.
      }
      block_5 {              // 第5块.
         domain_boxes = [(20,0,20),(39,19,39)] // 索引范围.
         x_lo         = 0.5,0.0,0.0          // 第5块计算区域左下角的坐标值.
         x_up         = 1.0,0.5,0.5          // 第5块计算区域右上角的坐标值.
      }
      block_6 {              // 第6块.
         domain_boxes = [(0,20,20),(19,39,39)] // 索引范围.
         x_lo         = 0.0,0.5,0.0           // 第6块计算区域左下角的坐标值.
         x_up         = 0.5,1.0,0.5           // 第6块计算区域右上角的坐标值.
      }
      block_7 {              // 第7块.
         domain_boxes = [(20,20,20),(39,39,39)] // 索引范围.
         x_lo         = 0.5,0.5,0.0            // 第7块计算区域左下角的坐标值.
         x_up         = 1.0,1.0,0.5            // 第7块计算区域右上角的坐标值.
      }
   }
   CONFORMING_NEIGHBORS_LIST {
      number_of_neighbors = 28     // 邻居数.
      neighbors_0 {
         block_a      = 0
         block_b      = 1
         point_in_a_space =   0,0,0
         point_in_b_space =   0,0,0
      }
      neighbors_1 {
         block_a      = 0
         block_b      = 2
         point_in_a_space =  0, 0, 0
         point_in_b_space =  0, 0, 0
      }
      neighbors_2 {
         block_a      = 0
         block_b      = 3
         point_in_a_space =  0, 0, 0
         point_in_b_space =  0, 0, 0
      }
      neighbors_3 {
         block_a      = 0
         block_b      = 4
         point_in_a_space =  0, 0, 0
         point_in_b_space =  0, 0, 0
      }
      neighbors_4 {
         block_a      = 0
         block_b      = 5
         point_in_a_space =  0, 0, 0 
         point_in_b_space =  0, 0, 0
      }
      neighbors_5 {
         block_a      = 0
         block_b      = 6
         point_in_a_space =  0, 0, 0 
         point_in_b_space =  0, 0, 0
      }
      neighbors_6 {
         block_a      = 0
         block_b      = 7
         point_in_a_space =  0, 0, 0 
         point_in_b_space =  0, 0, 0
      }
      neighbors_7 {
         block_a      = 1
         block_b      = 2
         point_in_a_space =   0, 0, 0 
         point_in_b_space =   0, 0, 0
      }
      neighbors_8 {
         block_a      = 1
         block_b      = 3
         point_in_a_space =   0, 0, 0 
         point_in_b_space =   0, 0, 0
      }
      neighbors_9 {
         block_a      = 1
         block_b      = 4
         point_in_a_space =   0, 0, 0 
         point_in_b_space =   0, 0, 0
      }
      neighbors_10 {
         block_a      = 1
         block_b      = 5
         point_in_a_space =   0, 0, 0 
         point_in_b_space =   0, 0, 0
      }
      neighbors_11 {
         block_a      = 1
         block_b      = 6
         point_in_a_space =   0, 0, 0 
         point_in_b_space =   0, 0, 0
      }
      neighbors_12 {
         block_a      = 1
         block_b      = 7
         point_in_a_space =   0, 0, 0 
         point_in_b_space =   0, 0, 0
      }
      neighbors_13 {
         block_a      = 2
         block_b      = 3
         point_in_a_space =   0, 0, 0 
         point_in_b_space =   0, 0, 0
      }
      neighbors_14 {
         block_a      = 2
         block_b      = 4
         point_in_a_space =   0,  0,  0 
         point_in_b_space =   0,  0,  0
      }
      neighbors_15 {
         block_a      = 2
         block_b      = 5
         point_in_a_space =   0,  0,  0 
         point_in_b_space =   0,  0,  0
      }
      neighbors_16 {
         block_a      = 2
         block_b      = 6
         point_in_a_space =   0,  0,  0 
         point_in_b_space =   0,  0,  0
      }
      neighbors_17 {
         block_a      = 2
         block_b      = 7
         point_in_a_space =   0,  0,  0 
         point_in_b_space =   0,  0,  0
      }
      neighbors_18 {
         block_a      = 3
         block_b      = 4
         point_in_a_space =   0,  0,  0 
         point_in_b_space =   0,  0,  0
      }
      neighbors_19 {
         block_a      = 3
         block_b      = 5
         point_in_a_space =   0,  0,  0 
         point_in_b_space =   0,  0,  0
      }
      neighbors_20 {
         block_a      = 3
         block_b      = 6
         point_in_a_space =   0,  0,  0 
         point_in_b_space =   0,  0,  0
      }
      neighbors_21 {
         block_a      = 3
         block_b      = 7
         point_in_a_space =   0,  0,  0 
         point_in_b_space =   0,  0,  0
      }
      neighbors_22 {
         block_a      = 4
         block_b      = 5
         point_in_a_space =   0,  0,  0 
         point_in_b_space =   0,  0,  0
      }
      neighbors_23 {
         block_a      = 4
         block_b      = 6
         point_in_a_space =   0,  0,  0 
         point_in_b_space =   0,  0,  0
      }
      neighbors_24 {
         block_a      = 4
         block_b      = 7
         point_in_a_space =   0,  0,  0 
         point_in_b_space =   0,  0,  0
      }
      neighbors_25 {
         block_a      = 5
         block_b      = 6
         point_in_a_space =   0,  0,  0 
         point_in_b_space =   0,  0,  0
      }
      neighbors_26 {
         block_a      = 5
         block_b      = 7
         point_in_a_space =   0,  0,  0 
         point_in_b_space =   0,  0,  0
      }
      neighbors_27 {
         block_a      = 6
         block_b      = 7
         point_in_a_space =   0,  0,  0 
         point_in_b_space =   0,  0,  0
      }
   }

}

SnSweep{
  // 材料代号
  matter = "1004"

  // 能群系数
  #include "eg16.para"

  // S2离散
  s_n = 4
  #include "sn.para"  
}

SnSweepLevelIntegrator{
   dt = 1e-4
   error_tole = 1e-11
   max_sweep_iter = 100
   max_num_cells_swept = 2600
}

HierarchyTimeIntegrator{

   start_time           = 0.0     // 模拟的初始时刻.
   end_time             = 0.01    // 模拟的终止时刻.
   max_integrator_steps = 100     // 模拟的最大时间步数.

   GriddingAlgorithm{
      // 最大网格层数.
      max_levels = 1   

      // 最大网格片大小.
      largest_patch_size {
        level_0 = 10,10,10
      }

      // 最小网格片大小.
      smallest_patch_size {
         level_0 = 4,4,4
      }
   }

   LoadBalancer{
      processor_layout = 2,1,1
   }
  
}

TimerManager{
   print_summed     = TRUE
   print_max        = TRUE
   timer_list       = "apps::*::*", "algs::SweepingPatchStrategy::*", "algs::HierarchyTimeIntegrator::*"
}

